# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# IDE
.vscode
.idea

# CLIENT GITIGNORES
# dependencies
client/node_modules
client/.pnp
.pnp.js

# testing
client/coverage

# production
client/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*


# SERVER GITIGNORES
# Byte-compiled / optimized / DLL files
server/__pycache__/
server/*.py[cod]
server/*$py.class
__pycache__

# C extensions
server/*.so

# Distribution / packaging
server/.Python
server/build/
server/develop-eggs/
server/dist/
server/downloads/
server/eggs/
server/.eggs/
server/lib/
server/lib64/
server/parts/
server/sdist/
server/var/
server/wheels/
server/pip-wheel-metadata/
server/share/python-wheels/
server/*.egg-info/
server/.installed.cfg
server/*.egg
server/MANIFEST
*.pyc

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
server/*.manifest
server/*.spec

# Installer logs
server/pip-log.txt
server/pip-delete-this-directory.txt

# Flask stuff:
server/instance/
server/.webassets-cache

# pyenv
server/.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
server/__pypackages__/

# Celery stuff
server/celerybeat-schedule
server/celerybeat.pid

# Environments
server/.env
server/.venv
server/env/
server/venv/
server/ENV/
server/env.bak/
server/venv.bak/
